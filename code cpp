 #include <iostream>
#include <cmath> // Dla funkcji log
#define M_PI 3.141592653589793 // Definicja pi
using namespace std;

int main()
{
    const int n = 8; // Liczba punktów

    // Węzły i wartości funkcji dla ln(x) w przedziale [0.1, 2]
    double t[n] = { 0.1, 0.3, 0.5, 0.7, 1.0, 1.3, 1.7, 2.0 };
    double y[n];

    // Obliczamy wartości ln(x) dla węzłów
    for (int i = 0; i < n; i++) {
        y[i] = log(t[i]);
    }

    double h[n - 1];
    double b[n - 1];
    double u[n];
    double v[n];
    double z[n];

    // Obliczenia kroków h i b
    for (int i = 0; i < n - 1; i++) {
        h[i] = t[i + 1] - t[i];
        b[i] = (6 * (y[i + 1] - y[i])) / h[i];
    }

    // Obliczanie współczynników u i v
    u[1] = 2 * (h[0] + h[1]);
    v[1] = b[1] - b[0];
    for (int i = 2; i < n - 1; i++) {
        u[i] = 2 * (h[i - 1] + h[i]) - h[i - 1] * h[i - 1] / u[i - 1];
        v[i] = b[i] - b[i - 1] - h[i - 1] * v[i - 1] / u[i - 1];
    }

    // Obliczanie współczynników z
    z[n - 1] = 0;
    for (int i = n - 2; i > 0; i--) {
        z[i] = (v[i] - h[i] * z[i + 1]) / u[i];
    }
    z[0] = 0;

    // Wyświetlanie funkcji sklejanych
    cout << "Funkcje sklejane dla ln(x):\n";
    for (int i = 0; i < n - 1; i++) {
        cout << "S_" << i << "(x) = " << z[i] / (6 * h[i]) << " * (" << t[i + 1] << " - x)^3 + "
            << z[i + 1] / (6 * h[i]) << " * (x - " << t[i] << ")^3 + ("
            << y[i + 1] / h[i] - z[i + 1] * h[i] / 6 << ") * (x - " << t[i] << ") + ("
            << y[i] / h[i] - z[i] * h[i] / 6 << ") * (" << t[i + 1] << " - x)" << endl;
    }

    return 0;
}
